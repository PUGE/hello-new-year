<template lang="pug">
.home
  #WebGLCanvas
</template>

<script>
  module.exports = {
    data: {
      mouse: null,
      scene: null,
      renderer: null,
      WebGLCanvas: null,
      width: null,
      height: null,
      camera: null,
      camerapos: {},
      raycaster: null,
      light: null,
      controls: null,
      ecart: 0,
      isDrag: false,
      targetRotation: 0,
      stopTimer: true,
      mockData: {
        "wishes": [{
          "name": "Denis",
          "place": "Ekaterinburg, Russia",
          "id": "367",
          "wishtype": "money",
          "wish": "Win the lottery "
        }, {
          "name": "Alisa",
          "place": "New York City",
          "id": "228",
          "wishtype": "travel",
          "wish": "Enjoy wonderful travels"
        }, {
          "name": "xinxin",
          "place": "shenzhen",
          "id": "742",
          "wishtype": "peace",
          "wish": "Write for peace"
        }, {
          "name": "",
          "place": "",
          "id": "1748",
          "wishtype": "default",
          "wish": ""
        }, {
          "name": "Zachary",
          "place": "Millstone, KY",
          "id": "2450",
          "wishtype": "peace",
          "wish": "Write for peace"
        }, {
          "name": "",
          "place": "",
          "id": "2448",
          "wishtype": "strong",
          "wish": "Be Strong"
        }, {
          "name": "Filip",
          "place": "Slovakia",
          "id": "414",
          "wishtype": "btf",
          "wish": "Save Marty's children"
        }, {
          "name": "45",
          "place": "45",
          "id": "469",
          "wishtype": "default",
          "wish": "45"
        }, {
          "name": "Kseniya",
          "place": "Astrakhan",
          "id": "1451",
          "wishtype": "jedi",
          "wish": "Become the next Jedi"
        }, {
          "name": "888",
          "place": "tai",
          "id": "1309",
          "wishtype": "love",
          "wish": "Love and be loved"
        }, {
          "name": "Camille",
          "place": "France",
          "id": "540",
          "wishtype": "default",
          "wish": "I wish to meet Charly (France)"
        }, {
          "name": "Neena",
          "place": "India",
          "id": "1215",
          "wishtype": "strong",
          "wish": "Be Strong"
        }, {
          "name": "asd",
          "place": "russia",
          "id": "2505",
          "wishtype": "space",
          "wish": "Discover new horizons"
        }, {
          "name": "kez",
          "place": "singapore",
          "id": "1329",
          "wishtype": "default",
          "wish": "marry chucky"
        }, {
          "name": "Mira",
          "place": "Russia",
          "id": "1570",
          "wishtype": "default",
          "wish": "end of the war in Ukraine"
        }, {
          "name": "",
          "place": "",
          "id": "2275",
          "wishtype": "monday",
          "wish": "Have no mondays anymore"
        }, {
          "name": "",
          "place": "",
          "id": "2052",
          "wishtype": "default",
          "wish": ""
        }, {
          "name": "Julie",
          "place": "Paris",
          "id": "211",
          "wishtype": "travel",
          "wish": "Enjoy wonderful travels"
        }, {
          "name": "jodavaga",
          "place": "Colombia",
          "id": "721",
          "wishtype": "space",
          "wish": "Discover new horizons"
        }, {
          "name": "",
          "place": "",
          "id": "1791",
          "wishtype": "default",
          "wish": ""
        }, {
          "name": "Elena",
          "place": "México city",
          "id": "434",
          "wishtype": "default",
          "wish": "Save dogs"
        }, {
          "name": "Jayce",
          "place": "Nanjing,China",
          "id": "1045",
          "wishtype": "money",
          "wish": "Win the lottery "
        }, {
          "name": "jagadeesh",
          "place": "hello",
          "id": "1503",
          "wishtype": "space",
          "wish": "Discover new horizons"
        }, {
          "name": "Арс",
          "place": "Москва",
          "id": "1634",
          "wishtype": "default",
          "wish": "Желаю всем людям на земле большого здоровья"
        }, {
          "name": "Syl",
          "place": "NY",
          "id": "981",
          "wishtype": "earth",
          "wish": "Save planet earth"
        }, {
          "name": "Jimmy",
          "place": "Sgp",
          "id": "1881",
          "wishtype": "strong",
          "wish": "Be Strong"
        }, {
          "name": "Maria",
          "place": "Romania",
          "id": "2388",
          "wishtype": "monday",
          "wish": "Have no mondays anymore"
        }, {
          "name": "marcello stoppa",
          "place": "novara",
          "id": "1138",
          "wishtype": "space",
          "wish": "Discover new horizons"
        }, {
          "name": "afreire",
          "place": "lisboa \/ portugal",
          "id": "427",
          "wishtype": "jedi",
          "wish": "Become the next Jedi"
        }, {
          "name": "",
          "place": "",
          "id": "2464",
          "wishtype": "default",
          "wish": ""
        }, {
          "name": "teguh",
          "place": "indonesia",
          "id": "1621",
          "wishtype": "love",
          "wish": "Love and be loved"
        }, {
          "name": "Beyonce",
          "place": "Korea",
          "id": "202",
          "wishtype": "default",
          "wish": "Leave Korea"
        }, {
          "name": "success",
          "place": "india",
          "id": "456",
          "wishtype": "money",
          "wish": "Win the lottery "
        }, {
          "name": "asdf",
          "place": "mumbai",
          "id": "961",
          "wishtype": "strong",
          "wish": "Be Strong"
        }, {
          "name": "Xav",
          "place": "FRANCE",
          "id": "140",
          "wishtype": "default",
          "wish": "LOVE AND BE LOVED, ENJOY WONDERFUL TRAVELS, WIN THE LOTTERY, BE STRONGER, HAVE A PEACEFUL PLANET WITHOUT TERRORIST ATTACKS"
        }, {
          "name": "",
          "place": "",
          "id": "1727",
          "wishtype": "default",
          "wish": ""
        }, {
          "name": "hyewon",
          "place": "Seoul",
          "id": "1080",
          "wishtype": "love",
          "wish": "Love and be loved"
        }, {
          "name": "MONA",
          "place": "Romania",
          "id": "949",
          "wishtype": "travel",
          "wish": "Enjoy wonderful travels"
        }, {
          "name": "",
          "place": "",
          "id": "1054",
          "wishtype": "space",
          "wish": "Discover new horizons"
        }, {
          "name": "Кристина",
          "place": "Сыктывкаре",
          "id": "1671",
          "wishtype": "money",
          "wish": "Win the lottery "
        }],
        "totalwishes": 2683
      }
    },
    created: function () {
      // 创建3D场景
      this.init()
      // 添加星光
      this.addStarfield()
      // 添加模型
      this.loadCollada()
      // 添加主标题文字
      this.addText()
      // 添加光圈
      this.addAperture()
      // 添加环绕的线
      this.addLine()
      // 添加圆球
      this.addMessage()
      const animate = () => {
        requestAnimationFrame(animate)
        this.data.controls.update()
        this.render()
      }
      animate()
    },
    init: function () {
      this.data.width = window.innerWidth
      this.data.height = window.innerHeight
      this.data.WebGLCanvas = document.getElementById("WebGLCanvas")
      this.data.mouse = new THREE.Vector2
      this.data.scene = new THREE.Scene
      this.data.renderer = new THREE.WebGLRenderer({
        antialias: true,
        alpha: true
      })
      this.data.renderer.setSize(this.data.width, this.data.height)
      this.data.renderer.sortObjects = true
      this.data.WebGLCanvas.appendChild(this.data.renderer.domElement)
      this.data.camera = new THREE.PerspectiveCamera(400, this.data.width / this.data.height, 1, 2000)
      this.data.camerapos.positionZ = this.data.camera.position.z = 150
      this.data.camerapos.positionY = this.data.camera.position.y = 25
      this.data.camerapos.positionX = 0
      this.data.group = new THREE.Group
      this.data.group2 = new THREE.Group
      this.data.group3 = new THREE.Group
      this.data.scene.add(this.data.group)
      this.data.scene.add(this.data.group2)
      this.data.scene.add(this.data.group3)
      this.data.raycaster = new THREE.Raycaster
      // 添加灯光
      this.data.light = new THREE.PointLight(16777215, 1.5)
      this.data.light.position.set(100, 100, 200)
      this.data.scene.add(this.data.light);
      // 添加灯光2
      const light2 = new THREE.HemisphereLight(2865844, 2865844, 1.25)
      light2.color.setHex(15239532)
      light2.groundColor.setHSL(.1, .8, .4)
      light2.position.set( - 1, 1.75, 1)
      this.data.scene.add(light2)
      // document.addEventListener("mousemove", onDocumentMouseMove2, false),
      // WebGLCanvas.addEventListener("mousedown", onDocumentMouseDown, false),
      // WebGLCanvas.addEventListener("touchstart", onDocumentTouchStart, false),
      // WebGLCanvas.addEventListener("touchmove", onDocumentTouchMove, false),
      // window.addEventListener("resize", onWindowResize, false),
      this.data.controls = new THREE.OrbitControls(this.data.camera, this.data.renderer.domElement, this.data.renderer.domElement)
      this.data.controls.minDistance = 120
      this.data.controls.maxDistance = 200
      this.data.controls.maxPolarAngle = Math.PI / 2
      this.data.controls.minPolarAngle = .8
    },
    addParticlesCircle: function (e) {
      var t = new THREE.Geometry
      var r = new THREE.TextureLoader().load("@|spark.png|")
      var i = new THREE.PointsMaterial({
        size: 5,
        map: r,
        blending: THREE.AdditiveBlending,
        depthWrite: false,
        depthTest: !0,
        transparent: !0,
        opacity: .9 * Math.random()
      })
      for (n = (40 * Math.random(), 0); 2e3 > n; n += 2) {
        var a = .175 * n + Math.PI,
        o = e * Math.sin(a) * Math.random() * 5,
        s = 30 * Math.random() - 15,
        h = e * Math.cos(a) * Math.random() * 5;
        t.vertices.push(new THREE.Vector3(o, s, h))
      }
      var l = new THREE.Points(t, i);
      return l
    },
    addStarfield: function () {
      const circleTemp = this.addParticlesCircle(40);
      this.data.group3.add(circleTemp)
      TweenLite.to(circleTemp.material, 0, {
        opacity: 0
      })
      TweenLite.to(circleTemp.material, 1, {
        opacity: .9 * Math.random(),
        delay: 2
      });

      const circleTemp2 = this.addParticlesCircle(60);
      this.data.group2.add(circleTemp2)
      TweenLite.to(circleTemp2.material, 0, {
        opacity: 0
      })
      TweenLite.to(circleTemp2.material, 1, {
        opacity: .9 * Math.random(),
        delay: 2
      });
      var circleTemp3 = this.addParticlesCircle(83);
      this.data.group3.add(circleTemp3)
      TweenLite.to(circleTemp3.material, 0, {
        opacity: 0
      })
      TweenLite.to(circleTemp3.material, 1, {
        opacity: .9 * Math.random(),
        delay: 2
      })
    },
    render: function () {
      // if (this.data.isDrag) {
      //   this.data.ecart = .1 * (this.data.targetRotation - this.data.group.rotation.y
      //   this.data.stopTimer = false
      //   setTimeout(() => {
      //     stopTimer = !0
      //   }, 3000)
      //   this.data.isIntro = false
      // } else {
        
      // }
      // this.data.isDrag ?  : ecart = stopTimer ? -1 / 800 : .1 * (targetRotation - group.rotation.y),
      // isIntro || (group.rotation.y += ecart),
      // group2.rotation.y += .7 * ecart,
      // group3.rotation.y += .9 * ecart,
      // camera.lookAt(scene.position);
      // var e = new THREE.Vector3(mouse.x, mouse.y, 1).unproject(camera);
      // raycaster.set(camera.position, e.sub(camera.position).normalize());
      // // console.log(objects)
      // // return
      // // var t = raycaster.intersectObjects(objects);
      // // t.length > 0 ? INTERSECTED != t[0].object && (INTERSECTED = t[0].object, WebGLCanvas.classList.add("cursoron")) : (WebGLCanvas.classList.remove("cursoron"), INTERSECTED = null)
      this.data.renderer.render(this.data.scene, this.data.camera);
      // var r = 5e-4 * Date.now();
      // light.position.x = 3e3 * Math.sin(4 * r),
      // light.position.y = 1e3,
      // light.position.z = 3e3 * Math.cos(4 * r)
    },
    loadCollada: function () {
      console.log("Loading...")
      const loader = new THREE.ColladaLoader;
      loader.load("@|island.dae|", (e) => {
        planet = e.scene;
        // e.skins[0];
        TweenLite.to(planet.scale, 2, {
          x: 4,
          y: 4,
          z: 4,
          ease: Back.easeOut
        }),
        this.data.group.add(planet)
      })
    },
    addCircle: function(e) {
      let t = e, r = e, i = new THREE.Geometry, n = i.vertices, a = 2 * Math.PI / t
      for (let o = 0; t > o; o++) {
        const s = r * Math.cos(a * o)
        const h = r * Math.sin(a * o)
        n.push(new THREE.Vector3(s, h, 0))
      }
      // 闭合线段
      n.push(new THREE.Vector3(r * Math.cos(0), r * Math.sin(0), 0))
      // i.computeLineDistances();
      // 设置线的属性
      var l = new THREE.LineBasicMaterial({
        color: 16777215,
        linewidth: 1,
        opacity: .4,
        transparent: true
      }),
      c = new THREE.Line(i, l);
      c.computeLineDistances()
      c.position.y = -1
      c.rotation.x = Math.PI / 2
      return c
    },
    addLine: function () {
      // 圆圈
      var o = this.addCircle(50);
      this.data.scene.add(o)
      o.scale.set(.2, .2, .2)
      TweenLite.to(o.scale, .7, {
        x: 1,
        y: 1,
        z: 1,
        ease: Back.easeOut,
        delay: .8
      });
      var s = this.addCircle(70);
      this.data.scene.add(s)

      // 圆圈
      s.scale.set(.2, .2, .2)
      TweenLite.to(s.scale, .7, {
        x: 1,
        y: 1,
        z: 1,
        ease: Back.easeOut,
        delay: .7
      });
      var h = this.addCircle(80);
      this.data.scene.add(h)
      
      // 圆圈
      h.scale.set(.2, .2, .2)
      TweenLite.to(h.scale, .7, {
        x: 1,
        y: 1,
        z: 1,
        ease: Back.easeOut,
        delay: .5
      });
      var l = this.addCircle(30);
      this.data.scene.add(l)
      
      l.scale.set(.2, .2, .2)
      TweenLite.to(l.scale, .7, {
        x: 1,
        y: 1,
        z: 1,
        ease: Back.easeOut,
        delay: .9
      })
    },
    addText: function() {
      // 文字
      new THREE.TextureLoader().load("@|text.png|", texture => {
        var n = new THREE.SpriteMaterial({
          map: texture,
          color: 16777215,
          fog: true
        })
        var a = new THREE.Sprite(n);
        a.scale.set(45, 8, 45)
        a.rotation.copy(this.data.camera.rotation)
        a.translateY(25)
        a.updateMatrix()
        this.data.scene.add(a);
      })
    },
    addAperture: function () {
      // 光圈
      var e = new THREE.SphereGeometry(40, 16, 16),
      t = new THREE.MeshBasicMaterial({
        color: 16777215,
        wireframe: false,
        transparent: true,
        opacity: .05
      });
      t.depthWrite = false;
      var r = new THREE.Mesh(e, t);
      this.data.group.add(r);
    },
    addMessage: function () {
      let ind = 0
      this.data.mockData.wishes.forEach(element => {
        this.addWishes(ind++, element.name + " (" + element.place + ")", element.wishtype)
      })
    },
    makeTextSprite: function (text, config = {}, r, i) {
      var n = config.hasOwnProperty("fontface") ? config.fontface: "Raleway",
      a = config.hasOwnProperty("fontsize") ? config.fontsize: 17,
      o = config.hasOwnProperty("borderThickness") ? config.borderThickness: 4,
      s = config.hasOwnProperty("borderColor") ? config.borderColor: {r: 10,g: 10,b: 20,a: 1},
      h = config.hasOwnProperty("backgroundColor") ? config.backgroundColor: {r: 255,g: 255,b: 255,a: 1},
      canvasTemp = document.createElement("canvas");
      canvasTemp.width = 800,
      canvasTemp.height = 160;
      var u = canvasTemp.getContext("2d");
      u.font = a + "px " + n,
      u.textBaseline = "top";
      u.fillStyle = "rgba(" + h.r + "," + h.g + "," + h.b + "," + h.a + ")"
      u.strokeStyle = "rgba(" + s.r + "," + s.g + "," + s.b + "," + s.a + ")"
      u.lineWidth = o
      u.fillStyle = "rgba(255, 255, 255, 1)"
      // 文字 x y
      u.fillText(text, 435, 70);
      var d = new THREE.Texture(canvasTemp);
      d.needsUpdate = true;
      var f = new THREE.SpriteMaterial({
        map: d
      }),
      E = new THREE.Sprite(f),
      m = 40;
      E.scale.set(.6 * m, .1 * m, 1)
      return E
    },
    addWishes: function (ind, text) {
      const opacity = 3 * Math.random() / 10 + .7
      var n = 2 * ind * .175 + Math.PI
      // 小图标
      const texture = new THREE.TextureLoader().load("@|blove.png|")
      let part = new THREE.Sprite(new THREE.SpriteMaterial({
        map: texture,
        color: 16777215,
        opacity: opacity,
        transparent: true
      }))
      part.scale.set(2.5, 2.5, 2.5);
      // part.position.x = 0,
      // part.position.y = 0,
      // part.position.z = 0;
      part.name = ind
      this.data.group2.add(part)

      // 信息
      var textTemp = this.makeTextSprite(text, {}, "", opacity);
      // u.position.y = -2
      part.add(textTemp)
      
      TweenLite.to(part.position, .6, {
        x: 70 * Math.sin(n),
        y: -(ind / 2) + 20 * Math.random(),
        z: 70 * Math.cos(n),
        ease: Back.easeOut,
        delay: .9 + .1 * ind
      })
    }
  }
</script>


<style lang="less">
.home {
  background-image: url('@|bg.jpg|');
  background-size: auto 100%;
  background-position: center;
  overflow: hidden;
}
</style>
