function addCircle(e) {
  for (var t = e,
  r = e,
  i = new THREE.Geometry,
  n = i.vertices,
  a = 2 * Math.PI / t,
  o = 0; t > o; o++) {
    var s = r * Math.cos(a * o),
    h = r * Math.sin(a * o);
    n.push(new THREE.Vector3(s, h, 0))
  }
  // i.computeLineDistances();
  var l = new THREE.LineBasicMaterial({
    color: 16777215,
    linewidth: 1,
    opacity: .4,
    transparent: !0
  }),
  c = new THREE.Line(i, l);
  c.computeLineDistances()
  return c.position.y = -1,
  c.rotation.x = Math.PI / 2,
  c
}
function addParticlesCircle(e) {
  for (var t = new THREE.Geometry,
  r = THREE.ImageUtils.loadTexture("img/spark.png"), i = new THREE.PointCloudMaterial({
    size: 5,
    map: r,
    blending: THREE.AdditiveBlending,
    depthWrite: !1,
    depthTest: !0,
    transparent: !0,
    opacity: .9 * Math.random()
  }), n = (40 * Math.random(), 0); 2e3 > n; n += 2) {
    var a = .175 * n + Math.PI,
    o = e * Math.sin(a) * Math.random() * 5,
    s = 30 * Math.random() - 15,
    h = e * Math.cos(a) * Math.random() * 5;
    t.vertices.push(new THREE.Vector3(o, s, h))
  }
  var l = new THREE.PointCloud(t, i);
  return l
}
function makeTextSprite(e, t, r, i) {
  void 0 === t && (t = {});
  var n = t.hasOwnProperty("fontface") ? t.fontface: "Raleway",
  a = t.hasOwnProperty("fontsize") ? t.fontsize: 17,
  o = t.hasOwnProperty("borderThickness") ? t.borderThickness: 4,
  s = t.hasOwnProperty("borderColor") ? t.borderColor: {
    r: 10,
    g: 10,
    b: 20,
    a: 1
  },
  h = t.hasOwnProperty("backgroundColor") ? t.backgroundColor: {
    r: 255,
    g: 255,
    b: 255,
    a: 1
  },
  l = "new" == r ? {
    r: 254,
    g: 220,
    b: 180,
    a: 1
  }: {
    r: 255,
    g: 255,
    b: 255,
    a: .02
  },
  c = document.createElement("canvas");
  c.width = 800,
  c.height = 400;
  var u = c.getContext("2d");
  u.font = a + "px " + n,
  u.textBaseline = "top"; {
    var p = u.measureText(e);
    p.width + 200
  }
  u.fillStyle = "rgba(" + h.r + "," + h.g + "," + h.b + "," + h.a + ")",
  u.strokeStyle = "rgba(" + s.r + "," + s.g + "," + s.b + "," + s.a + ")",
  u.lineWidth = o,
  u.fillStyle = "rgba(" + l.r + ", " + l.g + ", " + l.b + "," + i + ")",
  u.fillText(e, 435, 100);
  var d = new THREE.Texture(c);
  d.needsUpdate = !0;
  var f = new THREE.SpriteMaterial({
    map: d,
    useScreenCoordinates: !1
  }),
  E = new THREE.Sprite(f),
  m = 80;
  return E.scale.set(.5 * m, .25 * m, .75 * m),
  E
}
function onDocumentMouseDown(e) {
  e.preventDefault(),
  WebGLCanvas.addEventListener("mousemove", onDocumentMouseMove, !1),
  WebGLCanvas.addEventListener("mouseup", onDocumentMouseUp, !1),
  WebGLCanvas.addEventListener("mouseout", onDocumentMouseOut, !1),
  mouseXOnMouseDown = e.clientX - windowHalfX,
  targetRotationOnMouseDown = targetRotation,
  isDrag = !0,
  isIntro = !1,
  mouse.x = e.clientX / window.innerWidth * 2 - 1,
  mouse.y = 2 * -(e.clientY / window.innerHeight) + 1;
  var t = new THREE.Vector3(mouse.x, mouse.y, 1).unproject(camera);
  // i.length > 0 ? (INTERSECTED = i[0].object, openWish("<p>" + wishMsg[INTERSECTED.name].wish + "</p>", wishMsg[INTERSECTED.name].type, wishMsg[INTERSECTED.name].id), WebGLCanvas.classList.add("cursoron")) : (WebGLCanvas.classList.remove("cursoron"), INTERSECTED = null)
}
function onDocumentMouseMove(e) {
  mouseX = e.clientX - windowHalfX,
  mouse.x = e.clientX / window.innerWidth * 2 - 1,
  mouse.y = 2 * -(e.clientY / window.innerHeight) + 1,
  targetRotation = targetRotationOnMouseDown + .02 * (mouseX - mouseXOnMouseDown),
  isDrag = !0,
  isIntro = !1
}
function onDocumentMouseUp() {
  WebGLCanvas.removeEventListener("mousemove", onDocumentMouseMove, !1),
  WebGLCanvas.removeEventListener("mouseup", onDocumentMouseUp, !1),
  WebGLCanvas.removeEventListener("mouseout", onDocumentMouseOut, !1),
  isDrag = !1
}
function onDocumentMouseOut() {
  WebGLCanvas.removeEventListener("mousemove", onDocumentMouseMove, !1),
  WebGLCanvas.removeEventListener("mouseup", onDocumentMouseUp, !1),
  WebGLCanvas.removeEventListener("mouseout", onDocumentMouseOut, !1),
  isDrag = !1
}
function onDocumentTouchStart(e) {
  if (2 === e.touches.length) {
    e.preventDefault(),
    mouse.x = e.touches[0].pageX / window.innerWidth * 2 - 1,
    mouse.y = 2 * -(e.touches[0].pageY / window.innerHeight) + 1;
    var t = new THREE.Vector3(mouse.x, mouse.y, 1).unproject(camera),
    r = new THREE.Raycaster(camera.position, t.sub(camera.position).normalize()),
    i = r.intersectObjects(objects);
    i.length > 0 ? (INTERSECTED = i[0].object, openWish("<p>" + wishMsg[INTERSECTED.name].wish + "</p>", wishMsg[INTERSECTED.name].type, wishMsg[INTERSECTED.name].id), WebGLCanvas.classList.add("cursoron")) : (WebGLCanvas.classList.remove("cursoron"), INTERSECTED = null)
  }
}
function onDocumentTouchMove(e) {
  1 === e.touches.length && (e.preventDefault(), mouseX = e.touches[0].pageX - windowHalfX, targetRotation = targetRotationOnMouseDown + .05 * (mouseX - mouseXOnMouseDown))
}
function callwishes_json() {
  var e = new XMLHttpRequest,
  t = 0;
  e.open("GET", "services/get_wishes.php", !0),
  e.setRequestHeader("Content-type", "application/json", !0),
  e.onreadystatechange = function() {
    if (4 == e.readyState && 200 == e.status) {
      var r = JSON.parse(e.responseText),
      i = r.totalwishes,
      n = r.wishes;
      console.log(i + " wishes published - Drag the sphere to rotate - Click on stars to discover each wish")
      for (var a in n) addWishes(t, n[a].name + " (" + n[a].place + ")", n[a].wishtype),
      a = {
        type: n[a].wishtype,
        id: n[a].id,
        wish: "Hello 2015,<br> I wish to <br>" + n[a].wish + " <span>" + n[a].name + " (" + n[a].place + ")</span>"
      },
      wishMsg.push(a),
      a = null,
      t++
    }
  },
  e.send(null)
}
function callwish_json(e) {
  var t = new XMLHttpRequest;
  t.open("GET", "services/get_wish.php?id=" + e, !0),
  t.setRequestHeader("Content-type", "application/json", !0),
  t.onreadystatechange = function() {
    if (4 == t.readyState && 200 == t.status) {
      var e = JSON.parse(t.responseText);
      for (var r in e) {
        var i = e[r].wishtype,
        n = "<p>Hello 2015,<br> I wish to " + e[r].wish + " </p><span> " + e[r].name + " (" + e[r].place + ")</span>";
        openWish(n, i, e[r].id)
      }
    }
  },
  t.send(null)
}
function openWishThanks(e, t, r) {
  wishthanks.innerHTML = "Wonderful !<br>Your wish has been added !!!",
  wishTxt.innerHTML = '<p>"Hello 2015,<br> I wish to <br>' + e + "</p>",
  "" === t && (t = "default"),
  icowish.innerHTML = '<img src="img/' + t + '.png">',
  wishArea.style.display = "block",
  TweenLite.to(wishArea, 1.5, {
    autoAlpha: 1,
    ease: Back.easeOut
  }),
  wishOpen = !0,
  openIdWish = r,
  WebGLCanvas.classList.remove("cursoron")
}
function openWish(e, t, r) {
  wishTxt.innerHTML = e,
  wishthanks.innerHTML = "",
  "" === t && (t = "default"),
  icowish.innerHTML = '<img src="img/' + t + '.png">',
  wishArea.style.display = "block",
  TweenLite.to(formwrapper, 2, {
    autoAlpha: 0,
    ease: Back.easeOut
  }),
  TweenLite.to(wishArea, 0, {
    autoAlpha: 0,
    scaleX: .5,
    scaleY: .5
  }),
  TweenLite.to(wishArea, .5, {
    autoAlpha: 1,
    scaleX: 1,
    scaleY: 1,
    ease: Back.easeOut
  }),
  wishOpen = !0,
  openIdWish = r,
  WebGLCanvas.classList.remove("cursoron")
}
function closeWish() {
  TweenLite.to(wishArea, 1.5, {
    autoAlpha: 0,
    ease: Back.easeOut
  }),
  TweenLite.to(formwrapper, 1, {
    autoAlpha: 1,
    ease: Back.easeOut
  }),
  wishOpen = !1,
  INTERSECTED = null,
  openIdWish = ""
}
function resetForm() {
  current = 0,
  document.getElementById("innerform").reset(),
  prevquest = document.getElementById("q3"),
  newquest = document.getElementById("q0"),
  document.querySelector(".questions").classList.remove("before"),
  prevquest.classList.remove("current"),
  prevquest.classList.remove("show-next"),
  prevquest.classList.add("hide"),
  newquest.classList.remove("hide"),
  newquest.classList.add("current"),
  document.getElementById("mywish").value = ""
}
function nextQuestion() { (1 !== current || "" != document.getElementById("name").value) && (2 !== current || "" != document.getElementById("place").value) && (1 == current && document.getElementById("place").focus(), 2 == current && (document.querySelector(".questions").classList.remove("before"), document.getElementById("btnquest").style.display = "none"), 3 == current && (current = 0), prevquest = document.getElementById("q" + current), newquest = document.getElementById("q" + (current + 1)), current++, 1 == current && (document.getElementById("btnquest").style.display = "block", document.querySelector(".questions").classList.add("before")), prevquest.classList.remove("current"), prevquest.classList.remove("show-next"), prevquest.classList.add("hide"), newquest.classList.add("current"), newquest.classList.add("show-next"), newquest.classList.remove("hide"))
}
function processForm() {
  var e = new XMLHttpRequest,
  t = "services/save_wish.php",
  r = document.getElementById("name").value,
  i = document.getElementById("place").value,
  n = document.getElementById("wish").value,
  a = document.getElementById("wishtype").value,
  o = "name=" + r + "&place=" + i + "&wish=" + n + "&wishtype=" + a;
  return e.open("POST", t, !0),
  e.setRequestHeader("Content-type", "application/x-www-form-urlencoded"),
  e.onreadystatechange = function() {
    if (4 == e.readyState && 200 == e.status) {
      var t = e.responseText;
      launchNewWish(r + " (" + i + ")", n, a, t)
    }
  },
  e.send(o),
  !1
}
function setFormPos() {
  formwrapper.style.display = "block";
  var e = 550 > windowHalfX ? 170 : windowHalfX - 370;
  formwrapper.style.top = windowHalfY - formwrapper.offsetHeight + 20 + "px",
  formwrapper.style.right = e + "px",
  TweenLite.to(formwrapper, 1, {
    autoAlpha: 1,
    ease: Back.easeOut
  }),
  isIntro = !1
}
function displayWishChoice(e, t) {
  document.getElementById("wish").value = t,
  document.getElementById("wishtype").value = e,
  TweenLite.to(wishchoice, .5, {
    autoAlpha: 0,
    ease: Back.easeOut,
    delay: .5
  }),
  processForm(),
  resetForm()
}
function init() {
  mouse = new THREE.Vector2,
  scene = new THREE.Scene,
  renderer = new THREE.WebGLRenderer({
    antialias: !0,
    alpha: !0
  }),
  renderer.setSize(WIDTH, HEIGHT),
  renderer.sortObjects = !1,
  WebGLCanvas.appendChild(renderer.domElement),
  camera = new THREE.PerspectiveCamera(400, window.innerWidth / window.innerHeight, 1, 2e3),
  camerapos.positionZ = camera.position.z = 150,
  camerapos.positionY = camera.position.y = 25,
  camerapos.positionX = 0,
  group = new THREE.Group,
  group2 = new THREE.Group,
  group3 = new THREE.Group,
  scene.add(group),
  scene.add(group2),
  scene.add(group3),
  raycaster = new THREE.Raycaster,
  light = new THREE.PointLight(16777215, 1.5),
  light.position.set(100, 100, 200),
  scene.add(light);
  var e = new THREE.HemisphereLight(2865844, 2865844, 1.25);
  e.color.setHex(15239532),
  e.groundColor.setHSL(.1, .8, .4),
  e.position.set( - 1, 1.75, 1),
  scene.add(e),
  document.addEventListener("mousemove", onDocumentMouseMove2, !1),
  WebGLCanvas.addEventListener("mousedown", onDocumentMouseDown, !1),
  WebGLCanvas.addEventListener("touchstart", onDocumentTouchStart, !1),
  WebGLCanvas.addEventListener("touchmove", onDocumentTouchMove, !1),
  window.addEventListener("resize", onWindowResize, !1),
  controls = new THREE.OrbitControls(camera, renderer.domElement, renderer.domElement),
  controls.minDistance = 120,
  controls.maxDistance = 200,
  controls.maxPolarAngle = Math.PI / 2,
  controls.minPolarAngle = .8,
  timer = 0,
  addStarfield()
}
function loadCollada() {
  console.log("Loading...")
  var e = new THREE.ColladaLoader;
  e.options.convertUpAxis = !0,
  e.load("img/island.dae", function(e) {
    planet = e.scene;
    // e.skins[0];
    TweenLite.to(planet.scale, 2, {
      x: 4,
      y: 4,
      z: 4,
      ease: Back.easeOut
    }),
    group.add(planet),
    addObjects(),
    callwishes_json()
  })
}
function addStarfield() {
  var e = addParticlesCircle(40);
  group3.add(e),
  TweenLite.to(e.material, 0, {
    opacity: 0
  }),
  TweenLite.to(e.material, 1, {
    opacity: .9 * Math.random(),
    delay: 2
  });
  var t = addParticlesCircle(60);
  group2.add(t),
  TweenLite.to(t.material, 0, {
    opacity: 0
  }),
  TweenLite.to(e.material, 1, {
    opacity: .9 * Math.random(),
    delay: 2
  });
  var r = addParticlesCircle(83);
  group3.add(r),
  TweenLite.to(r.material, 0, {
    opacity: 0
  }),
  TweenLite.to(e.material, 1, {
    opacity: .9 * Math.random(),
    delay: 2
  })
}
function addObjects() {
  var e = new THREE.SphereGeometry(40, 16, 16),
  t = new THREE.MeshBasicMaterial({
    color: 16777215,
    wireframe: !1,
    transparent: !0,
    opacity: .05
  });
  t.depthWrite = !1;
  var r = new THREE.Mesh(e, t);
  group.add(r);
  var i = THREE.ImageUtils.loadTexture("img/text.png"),
  n = new THREE.SpriteMaterial({
    map: i,
    color: 16777215,
    fog: !0
  }),
  a = new THREE.Sprite(n);
  a.scale.set(45, 8, 45),
  a.rotation.copy(camera.rotation),
  a.translateY(25),
  a.updateMatrix(),
  scene.add(a);
  var o = addCircle(50);
  scene.add(o),
  o.scale.set(.2, .2, .2),
  TweenLite.to(o.scale, .7, {
    x: 1,
    y: 1,
    z: 1,
    ease: Back.easeOut,
    delay: .8
  });
  var s = addCircle(70);
  scene.add(s),
  s.scale.set(.2, .2, .2),
  TweenLite.to(s.scale, .7, {
    x: 1,
    y: 1,
    z: 1,
    ease: Back.easeOut,
    delay: .7
  });
  var h = addCircle(80);
  scene.add(h),
  h.scale.set(.2, .2, .2),
  TweenLite.to(h.scale, .7, {
    x: 1,
    y: 1,
    z: 1,
    ease: Back.easeOut,
    delay: .5
  });
  var l = addCircle(30);
  scene.add(l),
  l.scale.set(.2, .2, .2),
  TweenLite.to(l.scale, .7, {
    x: 1,
    y: 1,
    z: 1,
    ease: Back.easeOut,
    delay: .9
  }),
  TweenMax.delayedCall(5, setFormPos)
}
function addWishes(e, t, r) {
  var i = 1.2,
  n = (new THREE.SphereGeometry(i, 32, 16), 2 * e * .175 + Math.PI),
  a = THREE.ImageUtils.loadTexture("img/b" + r + ".png"),
  o = 3 * Math.random() / 10 + .7,
  s = new THREE.SpriteMaterial({
    map: a,
    color: 16777215,
    opacity: o,
    transparent: !0
  });
  part = new THREE.Sprite(s),
  part.scale.set(2.5, 2.5, 2.5);
  var h = 70 * Math.sin(n),
  l = -(e / 2) + 20 * Math.random(),
  c = 70 * Math.cos(n);
  part.position.x = 0,
  part.position.y = 0,
  part.position.z = 0;
  var u = makeTextSprite(t, {},
  "", o);
  u.position.y = -2,
  part.name = e,
  part.add(u),
  group2.add(part),
  objects.push(part),
  TweenLite.to(part.position, .6, {
    x: h,
    y: l,
    z: c,
    ease: Back.easeOut,
    delay: .9 + .1 * e
  })
}
function addNewWish(e, t, r, i) {
  var n = 1.2,
  a = (new THREE.SphereGeometry(n, 32, 16), .175 * (15 + 5 * Math.random()) + Math.PI),
  o = THREE.ImageUtils.loadTexture("img/b" + r + ".png"),
  s = new THREE.SpriteMaterial({
    map: o,
    color: 16702645,
    fog: !0,
    alpha: .7,
    transparent: !0
  });
  part = new THREE.Sprite(s);
  var h = 75 * Math.sin(a),
  l = 20 * Math.random() - 5,
  c = 75 * Math.cos(a);
  part.position.x = 0,
  part.position.y = 5,
  part.position.z = 0;
  var u = makeTextSprite(e, {},
  "new", 1);
  u.position.y = -2,
  part.name = objects.length,
  part.add(u),
  part.scale.set(2.5, 2.5, 2.5),
  group2.add(part),
  objects.push(part),
  TweenLite.to(part.position, 2, {
    x: h,
    y: l,
    z: c,
    ease: Quad.easeOut
  });
  var p = {
    type: r,
    id: i,
    wish: t + " <span><br> " + e + "</span>"
  };
  wishMsg.push(p),
  p = null,
  TweenMax.delayedCall(3, openWishThanks, [t + " <br><span> " + e + "</span>", r, i])
}
function onWindowResize() {
  camera.aspect = window.innerWidth / window.innerHeight,
  camera.updateProjectionMatrix(),
  renderer.setSize(window.innerWidth, window.innerHeight),
  formwrapper.style.top = window.innerHeight / 2 - formwrapper.offsetHeight + 20 + "px";
  var e = window.innerWidth < 1100 ? 170 : window.innerWidth / 2 - 370;
  formwrapper.style.right = e + "px"
}
function onDocumentMouseMove2(e) {
  e.preventDefault(),
  mouse.x = e.clientX / window.innerWidth * 2 - 1,
  mouse.y = 2 * -(e.clientY / window.innerHeight) + 1
}
function animate() {
  requestAnimationFrame(animate),
  controls.update(),
  render()
}
function render() {
  isDrag ? (ecart = .1 * (targetRotation - group.rotation.y), stopTimer = !1, setTimeout(function() {
    stopTimer = !0
  },
  3e3), isIntro = !1) : ecart = stopTimer ? -1 / 800 : .1 * (targetRotation - group.rotation.y),
  isIntro || (group.rotation.y += ecart),
  group2.rotation.y += .7 * ecart,
  group3.rotation.y += .9 * ecart,
  camera.lookAt(scene.position);
  var e = new THREE.Vector3(mouse.x, mouse.y, 1).unproject(camera);
  raycaster.set(camera.position, e.sub(camera.position).normalize());
  // console.log(objects)
  // return
  // var t = raycaster.intersectObjects(objects);
  // return
  // t.length > 0 ? INTERSECTED != t[0].object && (INTERSECTED = t[0].object, WebGLCanvas.classList.add("cursoron")) : (WebGLCanvas.classList.remove("cursoron"), INTERSECTED = null),
  renderer.render(scene, camera);
  var r = 5e-4 * Date.now();
  light.position.x = 3e3 * Math.sin(4 * r),
  light.position.y = 1e3,
  light.position.z = 3e3 * Math.cos(4 * r),
  TweenLite.to(form, 0, {
    rotationX: .5 * camera.position.y - 10,
    transformOrigin: "left bottom"
  })
}
function launchNewWish(e, t, r, i) {
  TweenLite.to(group2.rotation, 2, {
    y: 0
  }),
  TweenLite.to(group.rotation, 2, {
    y: 0
  }),
  TweenLite.to(camera.position, 2, {
    x: 0,
    y: camerapos.positionY,
    z: camerapos.positionZ
  }),
  TweenLite.to(formwrapper, 2, {
    autoAlpha: 0,
    ease: Back.easeOut
  }),
  TweenMax.delayedCall(2, addNewWish, [e, t, r, i])
}
function launchApp() {
  loadCollada()
}
function skipintro() {
  tl.stop(),
  loadCollada()
}
function showNoWebglMsg() {
  document.getElementById("nowebglmsg").style.display = "block"
}


var Detector = {
  canvas: !!window.CanvasRenderingContext2D,
  webgl: function() {
    try {
      var e = document.createElement("canvas");
      return ! (!window.WebGLRenderingContext || !e.getContext("webgl") && !e.getContext("experimental-webgl"))
    } catch(t) {
      return ! 1
    }
  } (),
  workers: !!window.Worker,
  fileapi: window.File && window.FileReader && window.FileList && window.Blob,
  getWebGLErrorMessage: function() {
    var e = document.createElement("div");
    return e.id = "webgl-error-message",
    e.style.fontFamily = "monospace",
    e.style.fontSize = "13px",
    e.style.fontWeight = "normal",
    e.style.textAlign = "center",
    e.style.background = "#fff",
    e.style.color = "#000",
    e.style.padding = "1.5em",
    e.style.width = "400px",
    e.style.margin = "5em auto 0",
    this.webgl || (e.innerHTML = window.WebGLRenderingContext ? ['Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br />', 'Find out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.'].join("\n") : ['Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br/>', 'Find out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.'].join("\n")),
    e
  },
  addGetWebGLMessage: function(e) {
    var t, r, i;
    e = e || {},
    t = void 0 !== e.parent ? e.parent: document.body,
    r = void 0 !== e.id ? e.id: "oldie",
    i = Detector.getWebGLErrorMessage(),
    i.id = r,
    t.appendChild(i)
  }
};

var scene,
camera,
renderer,
stats,
container,
raycaster,
light,
controls,
targetRotation = 0,
targetRotationOnMouseDown = 0,
island,
plane,
particles,
group,
title,
group2,
group3,
part,
objects = [],
mouseX = 0,
mouseY = 0,
mouse,
INTERSECTED,
mouseXOnMouseDown = 0,
WebGLCanvas = document.getElementById("WebGLCanvas"),
radius = 100,
theta = 0,
total_wishes,
WIDTH = window.innerWidth,
HEIGHT = window.innerHeight,
windowHalfX = WIDTH / 2,
windowHalfY = HEIGHT / 2,
isDrag = !1,
isIntro = !0,
stopTimer = !0,
wishOpen = !1,
form = document.getElementById("form"),
formwrapper = document.getElementById("formwrapper"),
consoleTxt = document.getElementById("console"),
wishArea = document.getElementById("wishArea"),
wishTxt = document.getElementById("wishTxt"),
icowish = document.getElementById("icowish"),
btnnewwish = document.getElementById("btnnewwish"),
ecart = 0,
timer = 0,
wishMsg = [],
camerapos = {},
current = 0,
questionsCount = 3,
prevquest = document.getElementById("q" + current),
newquest = document.getElementById("q" + (current + 1)),
btnquest = document.getElementById("btnquest"),
wishthanks = document.getElementById("wishthanks"),
btnFB = document.getElementById("btnFB"),
btnTW = document.getElementById("btnTW"),
openIdWish;
btnClose.addEventListener("click",
function(e) {
  e.preventDefault(),
  closeWish()
}),
btnFB.addEventListener("click",
function(e) {
  e.preventDefault();
  var t = "http://www.clair-et-net.com/hello2015/share.php?id=" + openIdWish,
  r = "Say hello to 2015";
  return window.open("http://www.facebook.com/sharer.php?u=" + encodeURIComponent(t) + "&t=" + encodeURIComponent(r), "sharer", "toolbar=0,status=0,width=626,height=436"),
  !1
}),
btnTW.addEventListener("click",
function(e) {
  e.preventDefault();
  var t = "http://www.clair-et-net.com/hello2015/share.php?id=" + openIdWish,
  r = "Say hello to 2015";
  return window.open("http://twitter.com/share?url=" + t + "&amp;text=" + r, "twitterwindow", "height=450, width=550, top=" + (windowHalfY - 225) + ", left=" + windowHalfX + ", toolbar=0, location=0, menubar=0, directories=0, scrollbars=0"),
  !1
}),
btnquest.addEventListener("click",
function(e) {
  e.preventDefault(),
  nextQuestion()
}),
btnnewwish.addEventListener("click",
function(e) {
  e.preventDefault(),
  nextQuestion()
});
var msg1 = document.getElementById("msg1"),
msg2 = document.getElementById("msg2"),
msg3 = document.getElementById("msg3");
window.onload = function() {
  if (screen.width <= 700) window.location = "mobile.php";
  else if (Detector.webgl) {
    init()
    animate()
  } else showNoWebglMsg()
};

launchApp()